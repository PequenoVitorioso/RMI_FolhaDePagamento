/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

/**
 *
 * @author Yasmim Mendes
 */

import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.RemoteException;
import javax.swing.JOptionPane;
import model.CargoModel;
import controller.CargoInterface;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

public class CargoView extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(CargoView.class.getName());

    /**
     * Creates new form ClienteView
     */
    public CargoView() {
        initComponents();
        inicializa();
        preencherTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtxNome = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jbSalvar = new javax.swing.JButton();
        jbEditar = new javax.swing.JButton();
        jbFechar = new javax.swing.JButton();
        jbPesquisar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jtxId_Cargo = new javax.swing.JTextField();
        jtxSalarioBase = new javax.swing.JTextField();
        jbNovo1 = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jtxNome1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jInternalFrame1.setVisible(true);

        jLabel1.setText("CARGO");

        jLabel2.setText("Nome:");

        jLabel4.setText("Salário Base:");

        jtxNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxNomeActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Descrição", "Salário Base"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jbSalvar.setText("Salvar");
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbEditar.setText("Editar");
        jbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditarActionPerformed(evt);
            }
        });

        jbFechar.setText("Fechar");
        jbFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbFecharActionPerformed(evt);
            }
        });

        jbPesquisar.setText("Pesquisar");
        jbPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPesquisarActionPerformed(evt);
            }
        });

        jLabel5.setText("Código:");

        jtxId_Cargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxId_CargoActionPerformed(evt);
            }
        });

        jtxSalarioBase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxSalarioBaseActionPerformed(evt);
            }
        });

        jbNovo1.setText("Novo");
        jbNovo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovo1ActionPerformed(evt);
            }
        });

        jbExcluir.setText("Excluir");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jtxNome1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxNome1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Descrição:");

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 586, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGap(305, 305, 305)
                        .addComponent(jLabel1))
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addComponent(jbNovo1)
                                .addGap(18, 18, 18)
                                .addComponent(jbSalvar)
                                .addGap(18, 18, 18)
                                .addComponent(jbEditar)
                                .addGap(18, 18, 18)
                                .addComponent(jbExcluir)
                                .addGap(18, 18, 18)
                                .addComponent(jbFechar))
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jInternalFrame1Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(8, 8, 8)
                                        .addComponent(jtxSalarioBase))
                                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtxNome1))
                                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jtxId_Cargo, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(jtxNome, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(jbPesquisar)))))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtxId_Cargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtxNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtxNome1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtxSalarioBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbFechar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbEditar)
                        .addComponent(jbSalvar)
                        .addComponent(jbNovo1)
                        .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 7, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        String nome = jtxNome.getText();
        String descricao = jtxNome1.getText();
        String salarioStr = jtxSalarioBase.getText();

        if (nome.isEmpty() || descricao.isEmpty() || salarioStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Preencha todos os campos!", "Aviso", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            float salarioBase = Float.parseFloat(salarioStr);

            CargoModel cargo = new CargoModel();
            cargo.setNome(nome);
            cargo.setDescricao(descricao);
            cargo.setSalario(salarioBase);

            if (controller.inserir(cargo)) {
                JOptionPane.showMessageDialog(this, "Cargo inserido com sucesso!");
                limparCampos();
                preencherTabela();
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao inserir o cargo!", "Erro no Banco", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Salário deve ser numérico!", "Erro de Formato", JOptionPane.ERROR_MESSAGE);
        } catch (RemoteException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro de comunicação com o servidor RMI!", "Erro de Conexão", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jtxNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxNomeActionPerformed

    private void jbPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPesquisarActionPerformed
        if (jtxId_Cargo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Preencha o código do cargo!", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            int idCargo = Integer.parseInt(jtxId_Cargo.getText());
            CargoModel cargo = new CargoModel();
            cargo.setId_cargo(idCargo);

            cargo = controller.selecionar(cargo);

            if (cargo != null) {
                jtxNome.setText(cargo.getNome());
                jtxNome1.setText(cargo.getDescricao());
                jtxSalarioBase.setText(String.valueOf(cargo.getSalario()));

                jbSalvar.setEnabled(false);
                jbEditar.setEnabled(true);
                jbExcluir.setEnabled(true);

                jtxId_Cargo.setEditable(false);
                jtxNome.setEditable(true);
                jtxNome1.setEditable(true);
                jtxSalarioBase.setEditable(true);
            } else {
                JOptionPane.showMessageDialog(this, "Cargo não encontrado!", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Código inválido!", "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (RemoteException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro de comunicação com o servidor RMI!", "Erro de Conexão", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbPesquisarActionPerformed

    private void jtxSalarioBaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxSalarioBaseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxSalarioBaseActionPerformed

    private void jbNovo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovo1ActionPerformed
        jbPesquisar.setEnabled(false);
        jbNovo1.setEnabled(false);
        jbEditar.setEnabled(false);
        jbExcluir.setEnabled(false);
        jbSalvar.setEnabled(true);
        
        jtxId_Cargo.setEditable(false);
        jtxNome.setEditable(true);
        jtxNome1.setEditable(true);
        jtxSalarioBase.setEditable(true);

        jtxId_Cargo.setText("");
        jtxNome.setText("");
        jtxNome1.setText("");
        jtxSalarioBase.setText("");
        
        jtxNome.requestFocus();
    }//GEN-LAST:event_jbNovo1ActionPerformed

    private void jtxId_CargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxId_CargoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxId_CargoActionPerformed

    private void jbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditarActionPerformed
        if (jtxId_Cargo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Selecione ou pesquise um cargo primeiro!", "Aviso", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            int idCargo = Integer.parseInt(jtxId_Cargo.getText());
            String nome = jtxNome.getText();
            String descricao = jtxNome1.getText();
            String salarioStr = jtxSalarioBase.getText();

            if (nome.isEmpty() || descricao.isEmpty() || salarioStr.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Preencha todos os campos!", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }

            float salarioBase = Float.parseFloat(salarioStr);

            CargoModel cargo = new CargoModel();
            cargo.setId_cargo(idCargo);
            cargo.setNome(nome);
            cargo.setDescricao(descricao);
            cargo.setSalario(salarioBase);

            if (controller.editar(cargo)) {
                JOptionPane.showMessageDialog(this, "Cargo atualizado com sucesso!");
                limparCampos();
                preencherTabela();
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao atualizar cargo!", "Erro no Banco", JOptionPane.ERROR_MESSAGE);
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Código ou salário inválido!", "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (RemoteException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro de comunicação com o servidor RMI!", "Erro de Conexão", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbEditarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        if (jtxId_Cargo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Digite o código do cargo!", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            int idCargo = Integer.parseInt(jtxId_Cargo.getText());

            int confirm = JOptionPane.showConfirmDialog(
                    this,
                    "Deseja realmente excluir este cargo?",
                    "Confirmar Exclusão",
                    JOptionPane.YES_NO_OPTION
            );

            if (confirm != JOptionPane.YES_OPTION) {
                return;
            }

            CargoModel cargo = new CargoModel();
            cargo.setId_cargo(idCargo);

            if (controller.excluir(cargo)) {
                JOptionPane.showMessageDialog(this, "Cargo excluído com sucesso!");
                limparCampos();
                preencherTabela();

                // Após excluir, o estado dos botões deve ser atualizado
                jbSalvar.setEnabled(true);
                jbEditar.setEnabled(false);
                jbExcluir.setEnabled(false);
                jbPesquisar.setEnabled(true);
                jbNovo1.setEnabled(true);

                jtxId_Cargo.setEditable(true);
                jtxNome.setEditable(false);
                jtxNome1.setEditable(false);
                jtxSalarioBase.setEditable(false);

            } else {
                JOptionPane.showMessageDialog(this, "Erro ao excluir cargo!", "Erro no Banco", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Código do cargo inválido!", "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (RemoteException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro de comunicação com o servidor RMI!", "Erro de Conexão", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jbFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbFecharActionPerformed
        dispose();
    }//GEN-LAST:event_jbFecharActionPerformed

    private void jtxNome1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxNome1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxNome1ActionPerformed

    private CargoInterface controller;
    
    private void inicializa() {
    try {
        Registry registry = LocateRegistry.getRegistry("localhost", 1100);
        controller = (CargoInterface) registry.lookup("cargo");
        System.out.println("✅ Conectado ao servidor RMI!");
    } catch (Exception e) {
        controller = null;
        e.printStackTrace();
        System.out.println("❌ Falha ao conectar ao servidor RMI!");
    }
}

    private void preencherTabela() {
        try {
            ArrayList<CargoModel> lista = controller.listar();
            DefaultTableModel modeloTabela = (DefaultTableModel) jTable1.getModel();
            modeloTabela.setRowCount(0);

            for (CargoModel c : lista) {
                modeloTabela.addRow(new Object[] {
                    c.getId_cargo(),
                    c.getNome(),
                    c.getDescricao(),
                    c.getSalario()
                });
            }

            if (lista.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Nenhum cargo cadastrado!", "Retorno Tela", JOptionPane.WARNING_MESSAGE);
            }

        } catch (RemoteException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro de comunicação com o servidor RMI!", "Erro de Conexão", JOptionPane.ERROR_MESSAGE);
        }
    }
        
    private void limparCampos() {
        jtxId_Cargo.setText("");
        jtxNome.setText("");
        jtxNome1.setText("");
        jtxSalarioBase.setText("");

        jtxId_Cargo.setEditable(true);
        jtxNome.setEditable(false);
        jtxNome1.setEditable(false);
        jtxSalarioBase.setEditable(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbEditar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbFechar;
    private javax.swing.JButton jbNovo1;
    private javax.swing.JButton jbPesquisar;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JTextField jtxId_Cargo;
    private javax.swing.JTextField jtxNome;
    private javax.swing.JTextField jtxNome1;
    private javax.swing.JTextField jtxSalarioBase;
    // End of variables declaration//GEN-END:variables
}
